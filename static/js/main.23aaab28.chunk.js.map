{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","StrictMode","map","robot","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","style","height","border","overflowY","ErrorBoundry","props","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,cAAC,IAAMC,WAAP,UAEQD,EAAOE,KAAI,SAACC,EAAOC,GACf,OACI,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,SCGlBC,EAXG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,uBACIV,UAAU,6CACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,KCAPI,EANA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACI,qBAAKC,MAAO,CAAEC,OAAQ,OAAQC,OAAQ,kBAAmBC,UAAW,UAApE,SAAiFJ,KCmB1EK,E,kDApBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,wDAGJG,KAAKL,MAAMN,a,GAjBCa,aC6CZC,G,wDAvCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAAAC,GACb,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAb1C,EAAKZ,MAAQ,CACTlB,OAAQ,GACR4B,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfG,MAAM,8CACL7C,MAAK,SAAA8C,GAAQ,OAAIA,EAASC,UAC1B/C,MAAK,SAAAgD,GAAK,OAAI,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAO3C,WACI,MAAgCZ,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQ4B,EAAhB,EAAgBA,YAEVO,EAAiBnC,EAAOoC,QAAO,SAAAjC,GACjC,OAAOA,EAAMV,KAAK4C,cAAcC,SAASV,EAAYS,kBAGzD,OAAQrC,EAAOuC,OACP,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAegB,KAAKI,iBAC/B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAASmC,WANf,6C,GA1BdX,cCAlBgB,IAASC,OACP,cAAC,IAAMxC,WAAP,UACE,cAAC,EAAD,MAEFyC,SAASC,eAAe,SAM1B5D,M","file":"static/js/main.23aaab28.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className=\"bg-light-green tc dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img alt=\"robots\" src={`https://robohash.org/${id}?size=200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;\n\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n    return (\n        <React.StrictMode>\n            {\n                robots.map((robot, i) => {\n                    return ( \n                        <Card \n                            key={i} \n                            id={robots[i].id} \n                            name={robots[i].name} \n                            email={robots[i].email}\n                    />\n                    );\n                })\n            }\n        </React.StrictMode>\n    );\n}\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <input\n            className=\"db center pa3 ba b--green bg-lightest-blue\"\n            type=\"search\" \n            placeholder=\"search robots\"\n            onChange={searchChange}\n        />\n    )\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = ({ children }) => {\n    return (\n        <div style={{ height: \"70vh\", border: '1px solid black', overflowY: \"scroll\" }}>{children}</div>\n    );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info){\n        this.setState({ hasError: true })\n    }\n\n    render(){\n        if (this.state.hasError){\n            return <h1>Oops. THat is not good</h1>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\"\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport './App.css';\n\nclass App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users') // Receives a response\n        .then(response => response.json()) // Convert the response to a JSON\n        .then(users => this.setState({ robots: users })) // Updated the state after we fetch the data\n    }\n\n    onSearchChange = event => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n\n        return !robots.length ? <h1>Loading</h1> : (\n                <div className=\"tc\">\n                    <h1 className=\"f1\">RoboFriends</h1>\n                    <SearchBox searchChange={ this.onSearchChange } />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={ filteredRobots } />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n        }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}